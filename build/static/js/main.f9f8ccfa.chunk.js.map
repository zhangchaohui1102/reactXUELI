{"version":3,"sources":["xueli/TodoList.js","index.js"],"names":["TodoList","handleChange","e","setState","inpValue","target","value","addTodo","state","todos","title","done","delTodo","idx","JSON","parse","stringify","splice","filter","item","index","localStorage","setItem","toggle","newTodos","renderTodos","map","todo","onClick","checked","type","dangerouslySetInnerHTML","__html","getItem","this","arr1","className","htmlFor","id","ref","inp","input","onChange","length","style","color","Component","ReactDOM","render","document","getElementById"],"mappings":"6KAoHeA,E,kDA/GX,aAAc,IAAD,8BACT,gBAMJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOC,SARxB,EAwBbC,QAAU,WACkB,IAArB,EAAKC,MAAMJ,WAGd,EAAKD,SAAS,CACVM,MAAM,CACF,CACIC,MAAO,EAAKF,MAAMJ,SAClBO,MAAM,IAHT,mBAKE,EAAKH,MAAMC,UAGtB,EAAKN,SAAS,CAACC,SAAS,OArCf,EAwCbQ,QAAU,SAACC,GACQC,KAAKC,MAAMD,KAAKE,UAAU,EAAKR,MAAMC,QAC3CQ,OAAOJ,EAAI,GACpB,EAAKV,SAAS,CACVM,MAAO,EAAKD,MAAMC,MAAMS,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOP,OAGxD,EAAKV,SAAS,CACVM,MAAO,EAAKD,MAAMC,MAAMS,QAAO,SAACC,EAAKC,GAAN,OAAcA,GAAOP,OACtD,WACEQ,aAAaC,QACT,QACAR,KAAKE,UAAU,EAAKR,MAAMC,YApDzB,EAwDbc,OAAS,SAACH,GACN,IAAII,EAAWV,KAAKC,MAAMD,KAAKE,UAAU,EAAKR,MAAMC,QACpDe,EAASJ,GAAOT,MAAQa,EAASJ,GAAOT,KACxC,EAAKR,SAAS,CACVM,MAAOe,KA5DF,EA+DbC,YAAc,SAACd,GACX,OAAO,EAAKH,MAAMC,MAAMiB,KAAI,SAACC,EAAKd,GAC9B,GAAGF,GAAMgB,EAAKhB,KACV,OAAO,4BACH,2BACIiB,QAAS,kBAAI,EAAKL,OAAOV,IACzBgB,QAASlB,EACTmB,KAAK,aAET,0BAAMC,wBAAyB,CAACC,OAAOL,EAAKjB,SAC5C,4BACIkB,QAAS,kBAAI,EAAKhB,QAAQC,KAD9B,qBAvEZ,EAAKL,MAAQ,CACTJ,SAAU,GACVK,MAAM,IAJD,E,gEAWT,IAAIA,EAAQY,aAAaY,QAAQ,SAC9BxB,GACCyB,KAAK/B,SAAS,CACVM,MAAOK,KAAKC,MAAMN,O,2CAK1BY,aAAaC,QACT,QACAR,KAAKE,UAAUkB,KAAK1B,MAAMC,U,+BA6DxB,IAAD,SAEoByB,KAAK1B,MAAvBC,EAFF,EAEEA,MAAML,EAFR,EAEQA,SACT+B,EAAO1B,EAAMS,QAAQ,SAAAC,GAAI,OAAKA,EAAKR,QACvC,OACI,yBAAKyB,UAAU,OACX,2BAAOC,QAAQ,OAAf,YACA,2BACIC,GAAG,MACHC,IAAK,SAAAC,GAAG,OAAE,EAAKC,MAAQD,GACvBlC,MAAOF,EACP0B,KAAK,OACLY,SAAUR,KAAKjC,eAEnB,4BAAQ2B,QAASM,KAAK3B,SAAtB,gBACA,uDAAS4B,EAAKQ,QACd,4BACKT,KAAKT,aAAY,IAEtB,wDACA,wBAAImB,MAAO,CAACC,MAAgB,UACvBX,KAAKT,aAAY,S,GAxGfqB,aCEvBC,IAASC,OAEP,6BAAK,kBAAC,EAAD,OACLC,SAASC,eAAe,U","file":"static/js/main.f9f8ccfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n// 组件名首字母一定要大写\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            inpValue: '',\r\n            todos:[]\r\n        }\r\n    }\r\n    handleChange = (e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n    componentDidMount(){\r\n        let todos = localStorage.getItem('todos');\r\n        if(todos){\r\n            this.setState({\r\n                todos: JSON.parse(todos)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'todos',\r\n            JSON.stringify(this.state.todos)\r\n        )\r\n    }\r\n    addTodo = ()=>{\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos: [\r\n                {\r\n                    title: this.state.inpValue,\r\n                    done: false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        })\r\n        this.setState({inpValue:''})\r\n\r\n    }\r\n    delTodo = (idx)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos.splice(idx,1);\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        });\r\n        // setState 是异步执行的，注意callback的用法\r\n        this.setState({\r\n            todos: this.state.todos.filter((item,index)=>index!=idx)\r\n        },()=>{\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        });\r\n    }\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    renderTodos = (done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button \r\n                        onClick={()=>this.delTodo(idx)}\r\n                    >\r\n                        删除\r\n                    </button>\r\n                </li>\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        const {todos,inpValue} = this.state;\r\n        let arr1 = todos.filter( item => !item.done)\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    id='inp'\r\n                    ref={inp=>this.input = inp}\r\n                    value={inpValue} \r\n                    type=\"text\" \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button onClick={this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成</h2>\r\n                <ul style={{color:3<2?'red':'green'}}>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './xueli/List';\nimport TodoList from './xueli/TodoList';\nimport Input from './xueli/Input';\n\nReactDOM.render(\n  \n  <div><TodoList /></div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}